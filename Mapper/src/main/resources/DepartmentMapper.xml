<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace写接口的全类名-->
<mapper namespace="me.rsnomis.dao.DepartmentMapper">

    <select id="getDeptById" resultType="me.rsnomis.bean.Department">
        select id, dept_name departmentName from tbl_dept where id = #{id}
    </select>

    <!--要查询一个部门的所有员工，一对多的关系
        在部门对象中，用集合存储所有的员工
        这里用collection定义集合,关联结果集：
        1. property: 指定集合属性的属性名
        2. ofType: 指定集合内部对象的类型
    -->
    <resultMap id="MyDept" type="me.rsnomis.bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="emps" ofType="me.rsnomis.bean.Employee">
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <select id="getDeptByIdPlus" resultMap="MyDept">
        select d.id did, d.dept_name dept_name,
                e.id eid, e.last_name last_name, e.email email, e.gender gender
        from tbl_dept d left join tbl_employee e
        on d.id = e.d_id
        where d.id = #{id}
    </select>

    <!--分步查询，collection也有分步查询
        同样设置两个属性
        1. select：定义的EmployeeMapperPlus中的getEmpByDeptId方法
        2. column：传入的参数在之前查询的列名
        3. fetchType: 设置默认采用延迟加载，设置成eager就取消了延迟加载，覆盖全局配置中的设置
        这也支持延迟加载
    -->
    <resultMap id="MyDeptStep" type="me.rsnomis.bean.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="emps"
                    select="me.rsnomis.dao.EmployeeMapperPlus.getEmpByDeptId"
                    column="id"
                    fetchType="lazy">
        </collection>
    </resultMap>
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id, dept_name from tbl_dept where id = #{id}
    </select>

    <!--如果分步查询要传入多个column变量
        可以将多列数据封装为map传递，column如下：
        column="{key1=column1,key2=column2}"
        如：
        column="{deptId = id}"
        因为在me.rsnomis.dao.EmployeeMapperPlus.getEmpByDeptId的map映射文件中使用了的是
        select * from tbl_employee where d_id = #{deptId}
        所以key是deptId或者arg[0]或者param[1]
    -->

</mapper>